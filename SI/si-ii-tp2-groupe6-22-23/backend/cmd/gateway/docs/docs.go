// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/drink": {
            "post": {
                "description": "Create a new drink",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Drink to add",
                        "name": "drink",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helper.Drink"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Use MQTT for the request",
                        "name": "mqtt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helper.Drink"
                        }
                    }
                }
            }
        },
        "/drink/{id}": {
            "get": {
                "description": "get a drink by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Drink ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Use MQTT for the request",
                        "name": "mqtt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helper.Drink"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a drink by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Drink ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Drink to update",
                        "name": "drink",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helper.Drink"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Use MQTT for the request",
                        "name": "mqtt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a drink by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Drink ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Use MQTT for the request",
                        "name": "mqtt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/drinks": {
            "get": {
                "description": "get all drink available",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Use MQTT for the request",
                        "name": "mqtt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/helper.Drink"
                            }
                        }
                    }
                }
            }
        },
        "/rating": {
            "post": {
                "description": "add a rating for a drink",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Rating to add",
                        "name": "rating",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/helper.Rating"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Use MQTT for the request",
                        "name": "mqtt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helper.Rating"
                        }
                    }
                }
            }
        },
        "/ratings/info/{id}": {
            "get": {
                "description": "Get number and average ratings for a drink",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Drink id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Use MQTT for the request",
                        "name": "mqtt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helper.RatingInfo"
                        }
                    }
                }
            }
        },
        "/ratings/{id}": {
            "get": {
                "description": "get all ratings for a drink",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Drink id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Use MQTT for the request",
                        "name": "mqtt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/helper.Rating"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "helper.Drink": {
            "type": "object",
            "properties": {
                "alcohol": {
                    "type": "number"
                },
                "capacity": {
                    "type": "number"
                },
                "country": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "producer": {
                    "type": "string"
                }
            }
        },
        "helper.Rating": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "drinkId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "helper.RatingInfo": {
            "type": "object",
            "properties": {
                "average": {
                    "type": "number"
                },
                "count": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
